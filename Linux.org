*** terminal command [[https://www.cnblogs.com/nucdy/p/5251659.html][1]]
| command              | description                                    |
| pwd                  | show now location                              |
| mkdir                | make new directory                             |
| cd                   | enter directory                                |
| ls                   | list of directories                            |
| ls -a                | list of all directories,including hidden files |
| ls -l                | list of deteail location of directories        |
| g++ hello.c -o hello | execute C/Cpp file                             |
| mv file directory    | move file to directory                         |
| ln src  dst          | create hard link                               |
| ln -s src dst        | create symbolic link                           |
| ln -snf src dst      | create new location symbolic link              |
| rm -rf filename      | delete file                                    |
| ~/                   | /home/                                         |
| C-a                  | set cursor to the begin                        |
| C-e                  | set cursor to the end                          |
| C-k                  | kill all after current cursor                  |
| C-u                  | kill all before current cursor                 |
| C-d                  | delete char after current cursor               |
| C-h                  | delete char before current cursor              |
| C-w                  | delete word after current cursor               |
| C-y                  | yank which kill by C-u\C-d\C-w                 |
| C-l                  | clear all record                               |
| C-r                  | read history commands                          |
|                      |                                                |
|                      |                                                |
#+BEGIN_SRC bash
sudo apt install <application> # install application
sudo apt remove <application> # uninstall application,reserve config
sudo apt-get <name> remove # uninstall application and config
sudo apt update # refresh source
sudo apt upgrade # upgrade all application
sudo apt autoremove <name> # uninstall no required packages
sudo apt full-upgrade # upgrade all application and packages
apt search <name> # search application
apt show # list of install deteails
apt list # list of all application
apt edit-sources # list of all source
apt-get autoclean # clean packages
apt-get clean # clean packages and cache
dpkg --get-selections|grep <name> # search application about name
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P # clean residual file
dpkg -l <package name> # list of all directories of package
wget <link-address> # download in current directory
wget -O <dir> <link> # download link on the dir
wget -i file.txt # execute links on the txt file (download many files)
wget -b <link> # download link on background, generate web-log file on current directory
wget -o <link> # download link on background, generate web-log file on current directory
wget -c <link> # contient to download
wget --limit-rate=100k -O  <link> # limit download rate =100kb
wget --spider <link> # test download link
wget --tries=3 <link> # define retry download 3 times
wget --mirror -p --convert-links -P <local-dir> <link> # download web all links and packages,and convert links to local directory
wget --reject=png --mirror -p --convert-links -P <local-dir> <link> # download reject target file(png)
wget -Q5m -i file.txt # download reject size over 5Mb
wget -r -A .png <link> # download target file(png) from web
wget --file-user=USERNAME --file-password=PASSWORD <url> # download from FTP
dpkg -i .deb # install deb package
sudo dpkg -l # list of all apt
touch <filename> # create file 
mkdir <foldername> # create folder
rm <filename> # remove file
rm -d <filename> # remove file and hard link
rm -f # force remove
rm -r # recursive remove
rm -v # remove and check verbose
rm -rf # clean currnt folder
rmdirr <foldername> # remove folder
#+END_SRC
*** git command
| command                                             | description                            |
| git init                                            | create initial git file                |
| git add file                                        | add file to git                        |
| git add .                                           | add all file to git                    |
| git rm filename                                     | remove file                            |
| git status                                          | check status                           |
| git log                                             | check log                              |
| git commit -m "..."                                 | commit description                     |
| git remote add origin [github address]              | add github address                     |
| git push -u origin master                           | push master branch to github           |
| git pull origin master                              | fresh(fetch and merge) github to local |
| git push origin master -f                           | force push master branch               |
| git config –global credential.helper cache          | cache git password for 15 minutes      |
| git config credential.helper ‘cache –timeout=3600’  | cache git password for 1 hour          |
| git config –global credential.helper store          | store git password forever             |
| git remote rm origin                                | remove origin                          |
| git branch                                          | check branch, head pointer "*"         |
| git checkout -b dev                                 | switch to a new branch "dev"           |
| git branch dev                                      | create a new branch "dev"              |
| git checkout dev                                    | switch to branch "dev"                 |
| git merge dev                                       | merge target branch to head branch     |
| git merge --no-ff -m "..." dev                      | merge without no-fast-forward          |
| git branch -d dev                                   | delete branch "dev"                    |
| git stash                                           | store head branch                      |
| git stash list                                      | list stash log                         |
| git stash pop                                       | stash apply and drop                   |
| git fetch origin master                             | fetch file from giihub                 |
| git log -p master..origin/master                    | compare master and origin              |
| git merge origin/master                             | merge master and origin                |
| git diff <name>                                     | compare <name> and head                |
| git fetch --all                                     | fetch all file from giihub             |
| git reset --hard <name> [origin/master]             | head branch to target vision           |
| git merge origin/master --allow-unrelated-histories | force merge                            |
| git pull --rebase origin master                     | rebase to branch                       |
#+BEGIN_SRC bash
git config --global user.name "username"
git config --global user.email "email address"
ssh-keygen -C 'email address' -t rsa # generate ssh key
gedit ~/.ssh/id_rsa.pub
ssh -T git@github.com
#+END_SRC
*** Linux command
#+NAME: <TXT file Chinese messy code>
#+BEGIN_SRC sh
gsettings set org.gnome.gedit.preferences.encodings candidate-encodings "['GB18030', 'UTF-8', 'CURRENT', 'ISO-8859-15', 'UTF-16']"  #TXT file Chinese messy code
#+END_SRC 

PPA:Personal Package Archives
#+BEGIN_SRC sh
sudo add-apt-repository ppa:user/ppa-name # add ppa source
sudo apt-get update # refresh source
sudo add-apt-repository -r ppa:user/ppa-name # remove ppa source
sudo apt-get update # refresh source
#+END_SRC
#+BEGIN_SRC sh
cat <filename> # show text 
cat -n <filename> # show text with line number
cat -b <filename> # show text with line number,blank line without number
cat -T <filename> # show text without tabs
more <filename>   # show text, <return> key:next page
less <filename>   # show textXS
cp <filename1> <filename2> # copy file1 to file2
cp -v <filename1> <filename2> # copy file and print
$LOGNAME # account username
tail -n 5 <filename> # print last 5 lines of file
ls -altr # list of all directories according time and invert
grep [option] pattern file # regular expression
#+END_SRC
*** Hotkey
| keybinding | description                               |
| C-d        | exit bash                                 |
| Pstrc      | Save a screenshot to Pictures             |
| S-Pstrc    | Save a screenshot of an area to Pictures  |
| M-Pstrc    | Save a screenshot of a window to Pictures |
| C-Pstrc    | copy a screenshot to clipboard            |
| S-C-Pstrc  | copy a screenshot of an area to clipboard |
|            |                                           |
*** Applications
**** BaiduPCS-Go [[https://github.com/iikira/BaiduPCS-Go#linux--macos][iikira]]
#+BEGIN_SRC bash
## add go path; install baidupcs-go
wget https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz # download packages from github
sudo tar -c /usr/local -zxvf go1.10.2.linux-amd64.tar.gz # unzip packages
vim ~/.bashrc
export GOPATH=$HOME/go # address gp path
# export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
source ~/.bashrc # execute config file
sudo apt install golang # install golanguage
go get -u -v github.com/iikira/BaiduPCS-Go # go direct install badiupcs-go from github
sudo ln -s ~/go/bin/BaiduPCS-Go baidupcs #  create link(baidupcs) for BaiduPCS
baidupcs # run Baidupcs-Go
login # login
logout # logout
loglist # account list
who # current account
su <uid> # switch account
quota # show storage capacity
cd <dir> # enter <dir>
cd <dir> -l # enter <dir> and list subdirectory
cd .. # enter parent directory
cd / # enter root directory
pwd  # show current directory
ls -asc # show fiie ascending order
ls -desc # show file descending order
ls -time # show file according time
ls -name # show file according name
ls -size # show file according size
config set -savedir ~/Downloads # set download location
search <name> # search file about <name>
d <filename1> <filename2> # download
upload <local-dir> <remote-dir> #upload
share l # share
offlinedl add <link1> <link2> # offline downloadXS
#+END_SRC
**** Goldendict 
[[http://blog.sina.com.cn/s/blog_933b54980102x6hr.html][Reference]]
**** iproute2
#+BEGIN_SRC bash
ip add # show ip 
ip link show # show ip

#+END_SRC
**** opensssh-server [[https://www.linuxidc.com/Linux/2014-06/103008.htm][1]] [[https://blog.csdn.net/u013452337/article/details/80847113][2]]
#+BEGIN_SRC bash
ps -e|grep ssh # ssh-agent and sshd
sudo /etc/init.d/ssh start # start ssh server
pidof sshd
ssh username@hosrname # client login
ssh -p 2222 username@hosrname # port 2222 login

#+END_SRC
**** gdb [[https://www.cnblogs.com/chenmingjun/p/8280889.html][1]]
#+BEGIN_SRC bash
gcc -o test test.c -g

#+END_SRC
<<<<<<< HEAD
**** make [[https://blog.csdn.net/qq_35451572/article/details/81092902][1]] 
=======
**** Qt [[https://www.jianshu.com/p/a21d32c5e789][1]]
#+BEGIN_SRC 
apt install libgl1-mesa-dev
#+END_SRC
**** Vim
#+BEGIN_SRC bash
wq # write and quit
wq! # force write and quit
#+END_SRC
**** RIME [[https://www.cnblogs.com/BlackStorm/p/Install-IBUS-RIME-Input-Method-On-Ubuntu-16-04-LTS.html][1]] [[http://zhizhi.betahouse.us/2018/10/17/rime-setup/][2]] [[https://www.jianshu.com/p/cffc0ea094a7][3]] 
#+BEGIN_SRC bash
sudo apt install ibus-rime
sudo apt install librime-data-pinyin-simp
sudo apt-get install librime-data-double-pinyin
cd ~/.config/ibus/rime
vim default.custom.yaml
"menu/page_size": 7
#+END_SRC
>>>>>>> origin/master
