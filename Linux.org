*** terminal command [[https://www.cnblogs.com/nucdy/p/5251659.html][1]]
**** shortcut
| keybindings          | description                 w directory                            |
| cd                   | enter directory                                |
| ls                   | list of directories                            |
| ls -a                | list of all directories,including hidden files |
| ls -l                | list of deteail location of directories        |
| g++ hello.c -o hello | execute C/Cpp file                             |
| mv file directory    | move file to directory                         |
| ln src  dst          | create hard link                               |
| ln -s src dst        | create symbolic link                           |
| ln -snf src dst      | create new location symbolic link              |
| ~/                   | /home/madhouse/                                |
| C-a                  | set cursor to the begin of line                |
| C-e                  | set cursor to the end of line                  |
| C-k                  | kill all after current cursor                  |
| C-u                  | kill all before current cursor                 |
| C-d                  | delete char after current cursor               |
| C-h                  | delete char before current cursor              |
| C-w                  | delete word after current cursor               |
| C-y                  | yank which kill by C-u\C-d\C-w                 |
| C-l                  | clear all record                               |
| C-r                  | read history commands                          |
| C-b                  | backward                                       |
| C-f                  | forward                                        |
| C-t                  | turn char to forward char                      |
| C-left               | backward word                                  |
| C-right              | forward word                                   |
| S-C-t                | new table                                      |
| S-C-t                | close table                                    |
| S-C-c                | copy                                           |
| S-C-v                | paste                                          |
| M-number             | select table                                   |
| S-C-n                | new window                                     |
| S-C-q                | quit                                           |
| C-c                  | quit current task                              |
| C-z                  | background running                             |
#+BEGIN_SRC bash
~/ # /home/madhouse
pwd # show location
mkdir # make a new directory
cd # enter target directory 
ls # list of directories
ls -a # list of all directories, including hidden file
ls -l # list of all directories and file with limition





mv

sudo apt install <application> # install application
sudo apt remove <application> # uninstall application,reserve config
sudo apt-get <name> remove # uninstall application and config
sudo apt update # refresh source
sudo apt upgrade # upgrade all application
sudo apt autoremove <name> # uninstall no required packages
sudo apt full-upgrade # upgrade all application and packages
apt search <name> # search application
apt show # list of install deteails
apt list # list of all application
apt edit-sources # list of all source
apt-get autoclean # clean packages
apt-get clean # clean packages and cache
dpkg --get-selections|grep <name> # search application about name
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P # clean residual file
dpkg -l <package name> # list of all directories of package
wget <link-address> # download in current directory
wget -O <dir> <link> # download link on the dir
wget -i file.txt # execute links on the txt file (download many files)
wget -b <link> # download link on background, generate web-log file on current directory
wget -o <link> # download link on background, generate web-log file on current directory
wget -c <link> # contient to download
wget --limit-rate=100k -O  <link> # limit download rate =100kb
wget --spider <link> # test download link
wget --tries=3 <link> # define retry download 3 times
wget --mirror -p --convert-links -P <local-dir> <link> # download web all links and packages,and convert links to local directory
wget --reject=png --mirror -p --convert-links -P <local-dir> <link> # download reject target file(png)
wget -Q5m -i file.txt # download reject size over 5Mb
wget -r -A .png <link> # download target file(png) from web
wget --file-user=USERNAME --file-password=PASSWORD <url> # download from FTP
dpkg -i .deb # install deb package
sudo dpkg -l # list of all apt
touch <filename> # create file 
mkdir <foldername> # create folder
rm <filename> # remove file
rm -d <filename> # remove file and hard link
rm -f # force remove
rm -r # recursive remove
rm -v # remove and check verbose
rm -rf # clean currnt folder
rmdirr <foldername> # remove folder
#+END_SRC
kill processes [[http://www.cnblogs.com/anno-ymy/p/10517512.html][1]]
#+BEGIN_SRC bash
ps -aux # show all processes number
ps -aux|more # use more to check all processes number
kill -9 PID # force kill processes
kill PID # kill processes
ps -aux|grep firefox # check processe about firefox
#+END_SRC
*** git command
| command                                             | description                            |
| git init                                            | create initial git file                |
| git add file                                        | add file to git                        |
| git add .                                           | add all file to git                    |
| git rm filename                                     | remove file                            |
| git status                                          | check status                           |
| git log                                             | check log                              |
| git commit -m "..."                                 | commit description                     |
| git remote add origin [github address]              | add github address                     |
| git push -u origin master                           | push master branch to github           |
| git pull origin master                              | fresh(fetch and merge) github to local |
| git push origin master -f                           | force push master branch               |
| git config –global credential.helper cache          | cache git password for 15 minutes      |
| git config credential.helper ‘cache –timeout=3600’  | cache git password for 1 hour          |
| git config –global credential.helper store          | store git password forever             |
| git remote rm origin                                | remove origin                          |
| git branch                                          | check branch, head pointer "*"         |
| git checkout -b dev                                 | switch to a new branch "dev"           |
| git branch dev                                      | create a new branch "dev"              |
| git checkout dev                                    | switch to branch "dev"                 |
| git merge dev                                       | merge target branch to head branch     |
| git merge --no-ff -m "..." dev                      | merge without no-fast-forward          |
| git branch -d dev                                   | delete branch "dev"                    |
| git stash                                           | store head branch                      |
| git stash list                                      | list stash log                         |
| git stash pop                                       | stash apply and drop                   |
| git fetch origin master                             | fetch file from giihub                 |
| git log -p master..origin/master                    | compare master and origin              |
| git merge origin/master                             | merge master and origin                |
| git diff <name>                                     | compare <name> and head                |
| git fetch --all                                     | fetch all file from giihub             |
| git reset --hard <name> [origin/master]             | head branch to target vision           |
| git merge origin/master --allow-unrelated-histories | force merge                            |
| git pull --rebase origin master                     | rebase to branch                       |
#+BEGIN_SRC bash
git config --global user.name "username"
git config --global user.email "email address"
ssh-keygen -C 'email address' -t rsa # generate ssh key
gedit ~/.ssh/id_rsa.pub
ssh -T git@github.com
#+END_SRC
*** Linux command [[https://blog.csdn.net/qintaiwu/article/details/73384755][1]]
#+NAME: <TXT file Chinese messy code>
#+BEGIN_SRC sh
gsettings set org.gnome.gedit.preferences.encodings candidate-encodings "['GB18030', 'UTF-8', 'CURRENT', 'ISO-8859-15', 'UTF-16']"  #TXT file Chinese messy code
#+END_SRC
PPA:Personal Package Archives
#+BEGIN_SRC sh
sudo add-apt-repository ppa:user/ppa-name # add ppa source
sudo apt-get update # refresh source
sudo add-apt-repository -r ppa:user/ppa-name # remove ppa source
sudo apt-get update # refresh source
#+END_SRC
#+BEGIN_SRC sh
cat <filename> # show text 
cat -n <filename> # show text with line number
cat -b <filename> # show text with line number,blank line without number
cat -T <filename> # show text without tabs
more <filename>   # show text, <return> key:next page
less <filename>   # show textXS
cp <filename1> <filename2> # copy file1 to file2
cp -v <filename1> <filename2> # copy file and print
$LOGNAME # account username
tail -n 5 <filename> # print last 5 lines of file
ls -altr # list of all directories according time and invert
grep [option] pattern file # regular expression
#+END_SRC
file permission setup
#+BEGIN_SRC bash
ls -lh <filename> # check file permissions
ls -ld <folder> # check folder permissions
sudo chmod 600 xxx # u read and write
sudo chomd 644 xxx # u read and write. group write
sudo chomd 700 xxx # u read write and execute
sudo chomd 666 xxx # group read and write
sudo chomd 777 xxx # group read write and write
# 000--no permission 100--only read 110--read and write 111--execute 
sudo chomd u+w xxx # u write
sudo chomd u-w xxx # cancel u write permission
sudo chomd g+r xxx # group read
sudo chomd o-r xxx # cancel others write
sudo chomd +x xxx # all execute
# u--your g--group o--others a--all
# +--add ---cancel =--set only
# r--read w--write x--execute
sudo useradd username # add user
passwd ****** # set user password
vim /etc/sudoers
username ALL=(ALL:ALL) All # add root permission
userdel -r username # delete user
#+END_SRC
#+BEGIN_SRC bash
echo "..." >> filename # add ... to file
#+END_SRC
*** Hotkey
| keybinding | description                               |
| C-d        | exit bash                                 |
| Pstrc      | Save a screenshot to Pictures             |
| S-Pstrc    | Save a screenshot of an area to Pictures  |
| M-Pstrc    | Save a screenshot of a window to Pictures |
| C-Pstrc    | copy a screenshot to clipboard            |
| S-C-Pstrc  | copy a screenshot of an area to clipboard |
|            |                                           |
*** Applications
**** BaiduPCS-Go [[https://github.com/iikira/BaiduPCS-Go#linux--macos][iikira]]
#+BEGIN_SRC bash
## add go path; install baidupcs-go
wget https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz # download packages from github
sudo tar -c /usr/local -zxvf go1.10.2.linux-amd64.tar.gz # unzip packages
vim ~/.bashrc
export GOPATH=$HOME/go # address gp path
# export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
source ~/.bashrc # execute config file
sudo apt install golang # install golanguage
go get -u -v github.com/iikira/BaiduPCS-Go # go direct install badiupcs-go from github
sudo ln -s ~/go/bin/BaiduPCS-Go baidupcs #  create link(baidupcs) for BaiduPCS
baidupcs # run Baidupcs-Go
login # login
logout # logout
loglist # account list
who # current account
su <uid> # switch account
quota # show storage capacity
cd <dir> # enter <dir>
cd <dir> -l # enter <dir> and list subdirectory
cd .. # enter parent directory
cd / # enter root directory
pwd  # show current directory
ls -asc # show fiie ascending order
ls -desc # show file descending order
ls -time # show file according time
ls -name # show file according name
ls -size # show file according size
config set -savedir ~/Downloads # set download location
search <name> # search file about <name>
d <filename1> <filename2> # download
upload <local-dir> <remote-dir> #upload
share l # share
offlinedl add <link1> <link2> # offline downloadXS
#+END_SRC
**** Goldendict 
[[http://blog.sina.com.cn/s/blog_933b54980102x6hr.html][Reference]]
**** iproute2
#+BEGIN_SRC bash
ip add # show ip 
ip link show # show ip

#+END_SRC
**** openssh-server and ssh tutorial [[https://www.linuxidc.com/Linux/2014-06/103008.htm][1]] [[https://blog.csdn.net/u013452337/article/details/80847113][2]]
#+BEGIN_SRC bash
ps -e|grep ssh # ssh-agent and sshd
sudo /etc/init.d/ssh start # start ssh server
pidof sshd
ssh username@hosrname # root client login
ssh -p 2222 username@hosrname # port 2222 login
ssh [-l login_name] [-p port] [user@hostname] # general format
ssh -l login_name hostname # user login
ssh login_name@hostname # user login

#+END_SRC
**** mosh
#+BEGIN_SRC bash
sudo apt install mosh
mosh login_name@hostname # login
#+END_SRC
**** gdb [[https://www.cnblogs.com/chenmingjun/p/8280889.html][1]]
#+BEGIN_SRC bash
gcc -o test test.c -g
g++ hello.c -o hello
#+END_SRC
<<<<<<< HEAD
**** make [[https://blog.csdn.net/qq_35451572/article/details/81092902][1]] 

**** Qt [[https://www.jianshu.com/p/a21d32c5e789][1]]
#+BEGIN_SRC 
apt install libgl1-mesa-dev
#+END_SRC
**** Vim
#+BEGIN_SRC bash
wq # write and quit
wq! # force write and quit
w <filename> # save with name
i # insert on current cursor
a # insert on next line
o # insert on a new line
set nu # show line number
<number> # turn to line #
/name # search ->n next
?name # search ->n next
q! # quit without save
#+END_SRC
| command | description                     |
| C-b     | pageup                          |
| C-f     | pageon                          |
| C-d     | turn up half a page             |
| C-u     | turn on half a page             |
| 0       | begin of text                   |
| G       | end of text                     |
| $       | end of line                     |
| ^       | begin of line                   |
| w       | next begin of word              |
| e       | next end of word                |
| b       | backward word                   |
| #l      | turn to char #                  |
| x       | delete                          |
| #x      | delete # chars                  |
| X       | backspace                       |
| #X      | backspace # chars               |
| dd      | delete current line             |
| #dd     | delete # line                   |
| yw      | copy to buffer                  |
| #yw     | copy # words to buffer          |
| yy      | copy line to buffer             |
| #yy     | copy # lines to buffer          |
| p       | paste                           |
| r       | replace                         |
| R       | replace continuously            |
| u       | undone                          |
| cw      | delete word                     |
| c#w     | delete # words                  |
| #G      | turn to line #                  |
| C-g     | current line number             |
| #       | search word like current cursor |
**** RIME [[https://www.cnblogs.com/BlackStorm/p/Install-IBUS-RIME-Input-Method-On-Ubuntu-16-04-LTS.html][1]] [[http://zhizhi.betahouse.us/2018/10/17/rime-setup/][2]] [[https://www.jianshu.com/p/cffc0ea094a7][3]] 
#+BEGIN_SRC bash
sudo apt install ibus-rime
sudo apt install librime-data-pinyin-simp
sudo apt-get install librime-data-double-pinyin
cd ~/.config/ibus/rime
vim default.custom.yaml
"menu/page_size": 7
#+END_SRC
**** Latex [[https://www.cnblogs.com/yeluqing/archive/2012/09/24/3827966.html][1]] [[http://blog.sciencenet.cn/home.php?mod=space&uid=200199&do=blog&id=1036667][2]] [[https://blog.csdn.net/u014803202/article/details/50410748][3]] [[https://blog.csdn.net/csfreebird/article/details/43636615][4]] [[http://www.bagualu.net/wordpress/archives/6525][5]] [[https://blog.csdn.net/csfreebird/article/details/43636615][6]] [[https://blog.csdn.net/u014803202/article/details/50410748][7]] [[https://blog.csdn.net/wuyao721/article/details/7669993][8]] [[http://blog.sina.com.cn/s/blog_61f013b801010cdh.html][9]] [[https://www.cnblogs.com/yeluqing/archive/2012/09/24/3827966.html][10]] [[https://www.cnblogs.com/SunSmileCS/archive/2013/02/22/2923002.html][11]] [[https://blog.csdn.net/pfanaya/article/details/7669364][12]] [[https://emacs-china.org/t/topic/2540][13]] [[http://blog.sina.com.cn/s/blog_61f013b801010cdh.html][14]] [[https://www.xuebuyuan.com/865488.html][15]] [[https://max.book118.com/html/2018/0103/147043242.shtm][16]] [[https://blog.csdn.net/junyidcf/article/details/48914047][17]]
#+BEGIN_SRC bash
sudo apt install texlive-full
sudo apt install auctex
#+END_SRC
#+BEGIN_SRC elisp
(add-hook 'LaTeX-mode-hook (lambda()
(add-to-list 'TeX-command-list '("XeLaTeX" "%`xelatex%(mode)%' %t" TeX-run-TeX nil t))
(setq TeX-command-default "XeLaTeX")
(setq TeX-save-query  nil )
(setq TeX-show-compilation t)
))
#+END_SRC
#+BEGIN_SRC elisp
(setq org-latex-compiler "xelatex")
#+END_SRC
#+LATEX_HEADER: \usepackage{ctex}
#+LATEX_COMPILER: xelatex
#+BEGIN_SRC tex
/usepackage[unicode=true,colorlinks=no,pdfborder=no]{hyperref}
#+END_SRC
**** Arm [[https://blog.csdn.net/qq_33475105/article/details/81489792][1]]
**** minicom [[https://blog.csdn.net/qq_38880380/article/details/77662637][1]]
#+BEGIN_SRC bash
sudo apt install minicom
sudo minicom -s # setup
sudo minicom # running
#+END_SRC
**** SAPGUI [[https://blogs.sap.com/2015/07/04/sap-gui-for-java-installation-and-configuration/][1]] [[https://www.icloud.com/#iclouddrive/0Kwlf84ytOdz5PLbfxg8eWZZQ][JAVA 750]] [[https://wenku.baidu.com/view/1e730049360cba1aa811da9a.html][3]]
[[https://wi-labor.informatik.hs-fulda.de/download/SAP%2520GUI/7.40/Java%2520740-10/][SAP DUI 7.40 Java]]
[[https://wi-labor.informatik.hs-fulda.de/][wi-labor]]
#+BEGIN_SRC bash
cd /opt/SAPClients/SAPGUI/bin/
./guistart conn=/H/ip-address/S/3200 # login
cd /opt/SAPClients/SAPGUI7.40rev10/bin 
./guilogon # logon
#+END_SRC
**** EdrawMax [[https://www.edrawsoft.com/download-edrawmax-linux.php][1]]
#+BEGIN_SRC bash
tar -zxvf edrawmax-9-amd64.tar.gz
chmod +x EdrawMax
sudo ./EdrawMax
cd /usr/local/bin
sudo ln -s ~/Downloads/edrawmax-9-amd64/EdrawMax edrawmax
#+END_SRC
**** Orgmode [[https://www.cnblogs.com/qlwy/archive/2012/06/15/2551034.html][1]] 
C-c C-x C-v show figure
C-x C-c exit
**** samba 
[[https://blog.csdn.net/qq_16551373/article/details/78171475][share files between windows and ubuntu]]
[[https://www.cnblogs.com/snoopys/p/6118488.html][simple tutorial]]
#+BEGIN_SRC bash
sudo apt install samba samba-common
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak # backup current config file
vim /etc/samba/smb.conf # configuration file
    security = user # account login

    security = user 
    map to guest = bad user # guest login
[share]
   comment = my share directory
   path = /home/madhouse/share # add share files
   available =yes
   browseable = yes # directory browseable premission
   writable = yes
   guest ok = yes
   public = yes
sudo useradd smbuser
sudo smbpasswd -a smbuser
sudo service smbd restart # restart samba service
sudo /etc/init.d/smbd restart # restart samba service
service smbd status # check status
service iptables stop # turn off SElinux
vim /etc/selinux/config
   SELINUX=enforcing-->set SELINUX=disabled # turn off forever
setenforce 0 # turn off 
#+END_SRC
windows browser login: file://10.0.12.172/share
smbclient login: smbclient //10.0.12.172/share/
                 smbclient -L //10.0.12.172
connect to server: smb://10.0.12.172/share/
windows explorer: \\10.0.12.172
win-r: \\10.0.12.172
*** Linux Customize
**** turn CapsLock to Left Ctrl [[https://www.cnblogs.com/ethan87/p/10219093.html][1]]
#+BEGIN_SRC bash
sudo vim /usr/share/X11/xkb/keycodes/evdev
CAPS=37;
LCTL=66;
#+END_SRC
**** ubuntu HDMI monitor [[https://blog.csdn.net/tianmaxingkong_/article/details/50570538][1]] [[https://forum.ubuntu.org.cn/viewtopic.php?t=486885][2]]
#+BEGIN_SRC bash
xrandr # check connecting device
xrandr --output HDMI-0 --same-as eDP-1 --auto # clone
xrandr --output VGA-0 --same-as LVDS --mode 1280x1024 # set display resolution
xrandr --output VGA-0 --right-of LVDS --auto # right display
xrandr --output VGA-0 --off # turn off monitor
xrandr --output VGA-0 --auto --output LVDS --off # turn on VGA, turn off LVDS
#+END_SRC
**** ssh
[[https://blog.csdn.net/weixin_36562804/article/details/81737521][VPS + ssh reverse proxy + autossh 1]] [[https://blog.csdn.net/asahinokawa/article/details/85480803][2]] [[https://blog.csdn.net/dy200811/article/details/52847543][3]] [[http://arondight.me/2016/02/17/%25E4%25BD%25BF%25E7%2594%25A8SSH%25E5%258F%258D%25E5%2590%2591%25E9%259A%25A7%25E9%2581%2593%25E8%25BF%259B%25E8%25A1%258C%25E5%2586%2585%25E7%25BD%2591%25E7%25A9%25BF%25E9%2580%258F/][4]]
[[https://blog.csdn.net/sethqqq/article/details/77033154][Ngrok + ssh connect server 1]] [[https://blog.csdn.net/qq_33404395/article/details/80788233][2]] [[https://www.sunnyos.com/article-show-67.html][3]]
