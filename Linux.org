*** Terminal command [[https://www.cnblogs.com/nucdy/p/5251659.html][1]]
**** shortcut
| keybindings | description                       |
| C-a         | set cursor to the begin of line   |
| C-e         | set cursor to the end of line     |
| C-k         | kill all after current cursor     |
| C-u         | kill all before current cursor    |
| C-d         | delete char after current cursor  |
| C-h         | delete char before current cursor |
| C-w         | delete word after current cursor  |
| C-y         | yank which kill by C-u\C-d\C-w    |
| C-l         | clear all record                  |
| C-r         | read history commands             |
| C-b         | backward                          |
| C-f         | forward                           |
| C-t         | turn char to forward char         |
| C-left      | backward word                     |
| C-right     | forward word                      |
| S-C-t       | new table                         |
| S-C-t       | close table                       |
| S-C-c       | copy                              |
| S-C-v       | paste                             |
| M-number    | select table                      |
| S-C-n       | new window                        |
| S-C-q       | quit                              |
| C-c         | quit current task                 |
| C-z         | background running                |
| C-S-f       | find                              |
|             |                                   |
**** commands
#+BEGIN_SRC bash
~/ # /home/madhouse
pwd # show location
mkdir # make a new directory
mkdir -p # parents no error if existing, make parent directories as needed
mkdir -m # mode=MODE set file mode (as in chmod), not a=rwx - umask
cd # enter target directory 
ls # list of directories
ls -a # list of all directories, including hidden file
ls -l # list of all directories and file with limition
ls -lht # list of all directories and size
du -sh  # size of current directory
mv filename dir # move file to target directory
ln src  dst # create hard link                               |
ln -s src dst # create symbolic link
ln -snf src dst # create new location symbolic link              
~/ # /home/madhouse/
sudo apt install <application> # install application
sudo apt remove <application> # uninstall application,reserve config
sudo apt-get <name> remove # uninstall application and config
sudo apt update # refresh source
sudo apt upgrade # upgrade all application
sudo apt autoremove <name> # uninstall no required packages
sudo apt full-upgrade # upgrade all application and packages
apt search <name> # search application
apt show # list of install deteails
apt list # list of all application
apt edit-sources # list of all source
apt-get autoclean # clean packages
apt-get clean # clean packages and cache
dpkg -i xxx.deb # install
dpkg -r xxx.deb # uninstall
dpkg -r -purge xxx.deb # uninstall and delete configration
dpkg -info xxx.deb # get information about deb package
dpkg -l # list install packages
dpkg --get-selections|grep <name> # search application about name
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P xxx # clean residual file
dpkg -l <package name> # list of all directories of package
wget <link-address> # download in current directory
wget -O <dir> <link> # download link on the dir
wget -i file.txt # execute links on the txt file (download many files)
wget -b <link> # download link on background, generate web-log file on current directory
wget -o <link> # download link on background, generate web-log file on current directory
wget -c <link> # contient to download
wget --limit-rate=100k -O  <link> # limit download rate =100kb
wget --spider <link> # test download link
wget --tries=3 <link> # define retry download 3 times
wget --mirror -p --convert-links -P <local-dir> <link> # download web all links and packages,and convert links to local directory
wget --reject=png --mirror -p --convert-links -P <local-dir> <link> # download reject target file(png)
wget -Q5m -i file.txt # download reject size over 5Mb
wget -r -A .png <link> # download target file(png) from web
wget --file-user=USERNAME --file-password=PASSWORD <url> # download from FTP
dpkg -i .deb # install deb package
sudo dpkg -l # list of all apt
touch <filename> # create file 
mkdir <foldername> # create folder
rm <filename> # remove file
rm -d <filename> # remove file and hard link
rm -f # force remove
rm -r # recursive remove
rm -v # remove and check verbose
rm -rf # clean currnt folder
rmdirr <foldername> # remove folder
#+END_SRC
kill processes [[http://www.cnblogs.com/anno-ymy/p/10517512.html][1]]
/proc/ record all processes PID
/var/log/ dmesg locate this directory
#+BEGIN_SRC bash
ps -aux # show all processes number
ps -aux|more # use more to check all processes number
ps -aux|less # use less to check all processes number
ps -A # list all processes
ps -U root -u root -N # list all processes without root
ps -u madhouse # list all processes from usrname "madhosue"
top # dynamic display allq processes, -q quit -h help
ps - ejH # list processes trees
ps axjf # list processes trees
ps -eLf # threads messaegs
ps axms # threads messaegs
top -b -n1 > ~/process.log # save list of all processes as log files
top -b -n1 | mail -s 'Process snapshot' yao.lin1703@e-nebual.com # sent processes list to email
cp -r source/ destination/
kill -9 PID # force kill processes
kill PID # kill processes
ps -aux|grep firefox # check processe about firefox
pgrep firefox # check process about firefox
pgrep -u madhouse sshd # search processe name about "sshd" username "madhouse"
echo "..." > filename # cover wirte
echo "..." >> filename # add wirte
dmesg > boot.msg # save device boot messages to boot.msg
dmesg | less # less dmesg
shutdown -h now # poweroff
shutdown -P now # poweroff
shutdown -h # poweroff 1 minute later
shutdown -r now # reboot now
shotdown -h 20 # poweroff 20 seconds later
reboot
reboot -f # force reboot
halt # poweroff
init 6 # reboot
init 0 # turn off system
#+END_SRC
**** Vim
#+BEGIN_SRC bash
%! sudo tee % /dev/null # 在vim保存需要权限的文件
#+END_SRC
*** Git 
command
| command                                             | description                            |
| git init                                            | create initial git file                |
| git add file                                        | add file to git                        |
| git add .                                           | add all file to git                    |
| git rm filename                                     | remove file                            |
| git status                                          | check status                           |
| git log                                             | check log                              |
| git commit -m "..."                                 | commit description                     |
| git remote add origin [github address]              | add github address                     |
| git push -u origin master                           | push master branch to github           |
| git pull origin master                              | fresh(fetch and merge) github to local |
| git push origin master -f                           | force push master branch               |
| git config –global credential.helper cache          | cache git password for 15 minutes      |
| git config credential.helper ‘cache –timeout=3600’  | cache git password for 1 hour          |
| git config –global credential.helper store          | store git password forever             |
| git remote rm origin                                | remove origin                          |
| git branch                                          | check branch, head pointer "*"         |
| git checkout -b dev                                 | switch to a new branch "dev"           |
| git branch dev                                      | create a new branch "dev"              |
| git checkout dev                                    | switch to branch "dev"                 |
| git merge dev                                       | merge target branch to head branch     |
| git merge --no-ff -m "..." dev                      | merge without no-fast-forward          |
| git branch -d dev                                   | delete branch "dev"                    |
| git stash                                           | store head branch                      |
| git stash list                                      | list stash log                         |
| git stash pop                                       | stash apply and drop                   |
| git fetch origin master                             | fetch file from giihub                 |
| git log -p master..origin/master                    | compare master and origin              |
| git merge origin/master                             | merge master and origin                |
| git diff <name>                                     | compare <name> and head                |
| git fetch --all                                     | fetch all file from giihub             |
| git reset --hard <name> [origin/master]             | head branch to target vision           |
| git merge origin/master --allow-unrelated-histories | force merge                            |
| git pull --rebase origin master                     | rebase to branch                       |
| git remote show origin                              | show remote origin                     |
#+BEGIN_SRC bash
git config --global user.name "username"
git config --global user.email "email address"
ssh-keygen -C 'email address' -t rsa # generate ssh key
gedit ~/.ssh/id_rsa.pub
ssh -T git@github.com

git reflog # view recent operation log 
git reset --hard [vision id] # head branch to target vision, delete staging area and working copy
git reset --soft [vision id] # head branch to target vision, keep staging area and working copy
git revert # create commit and hard branch to target vision
git log # view recent operation log about current branch
git clone [repository address] [/path/directory] # clone github repository to target directory 
#+END_SRC
*** Linux command [[https://blog.csdn.net/qintaiwu/article/details/73384755][1]]
#+NAME: <TXT file Chinese messy code>
#+BEGIN_SRC bash
gsettings set org.gnome.gedit.preferences.encodings candidate-encodings "['GB18030', 'UTF-8', 'CURRENT', 'ISO-8859-15', 'UTF-16']"  #TXT file Chinese messy code
#+END_SRC
PPA:Personal Package Archives
#+BEGIN_SRC bash
sudo add-apt-repository ppa:user/ppa-name # add ppa source
sudo apt-get update # refresh source
sudo add-apt-repository -r ppa:user/ppa-name # remove ppa source
sudo apt-get update # refresh source
sudo apt-get update -f install # force install
sudo apt -f install # fix dependencies
#+END_SRC
#+BEGIN_SRC bash
cat <filename> # show text 
cat -n <filename> # show text with line number
cat -b <filename> # show text with line number,blank line without number
cat -T <filename> # show text without tabs
echo "..." >> filename # add ... to file
more <filename>   # show text, <return> key:next page
less <filename>   # show textXS
cp <filename1> <filename2> # copy file1 to file2
cp -v <filename1> <filename2> # copy file and print
$LOGNAME # account username
tail -n 5 <filename> # print last 5 lines of file
ls -altr # list of all directories according time and invert
grep [option] pattern file # regular expression
#+END_SRC
#+NAME: <file permission setup>
#+BEGIN_SRC bash
ls -lh <filename> # check file permissions
ls -ld <folder> # check folder permissions
sudo chmod 600 xxx # u read and write
sudo chmod 644 xxx # u read and write. group write
sudo chmod 700 xxx # u read write and execute
sudo chmod 666 xxx # group read and write
sudo chmod 777 xxx # group read write and execute
# 000--no permission 100--only read 110--read and write 111--execute 
sudo chmod u+w xxx # u write
sudo chmod u-w xxx # cancel u write permission
sudo chmod g+r xxx # group read
sudo chmod o-r xxx # cancel others write
sudo chmod +x xxx # all execute
# u--your g--group o--others a--all
# +--add ---cancel =--set only
# r--read w--write x--execute
sudo useradd username # add user
passwd ****** # set user password
vim /etc/sudoers
username ALL=(ALL:ALL) All # add root permission
userdel -r username # delete user
#+END_SRC
#+BEGIN_SRC bash
w # view current user
who # view current user
whoami # view user
lastog # view all user
lastlog|last -n 15 # view last 15 user logs
#+END_SRC
ufw: uncomplicated firewall
#+BEGIN_SRC bash
sudo ufw status # check firewall status
Status: inactive # unwork
sudo ufw version # check firwell version
sudo ufw enable # enable firwell
sudo ufw default deny # enable firewal and deny all input port
sudo ufw disable # disable firwell
sudo ufw allow|deny [service]/[port] # enable/disable service
sudo ufw allow smtp # enable port 25/tcp, smtp service
sudo ufw allow 22/tcp # enable port 22/tcp, ssh service
sudo ufw allow 53 # enable port 53, tcp/udp
sudo ufw allow from 192.168.1.100 # allow ip 192.168.1.100 connect
sudo ufw delete allow from 192.168.254.254 
# delete rule about 192.168.254.254
sudo ufw deny smtp # disable smtp service
sudo ufw delete allow smtp # delete firwell rule about smtp service
sudo ufw delete allow|deny 20 # delete firwell rule about 20 port 
sudo ufw allow proto udp 192.168.0.1 prot 53 to 192.168.0.2 port 25
# allow remote 192.168.0.1 port 53 udp packet access local 192.168.0.2 port 25 
sudo ufw logging on|off # turn on/off firwell log
sudo ufw default allow #  enable firewall mostly open all input port
sudo ufw status numbered # cleck firewall rule
vim /etc/ufw/ufw.conf # firewall confiration file
#+END_SRC
ubuntu iptables [[https://www.cnblogs.com/davidwang456/p/3540837.html][{iptables destription}]] 
#+BEGIN_SRC bash
iptables -P INPUT DROP # drop all input packet
iptables -P FORWARD DROP # drop all forward packet (mostly nat)
iptables -P OUTPUT DROP # drop all output packet
iptables -L -n # check all input, forward and output, -line-number
sevrice iptables save # save iptables setting
iptables-save # save iptables setting
iptables-restore # restore iptables setting
iptables -A INPUT -p tcp --dport 22 j ACCEPT 
# append rule accept download tcp packet from port 22
iptables -A OUTPUT -p tcp --sport 22 i ACCEPT
# append rule accept sent tcp packet from port 22 
iptables -A INPUT -p tcp -s 192.168.1.2 -j DROP
# append rule drop tcp packet from 192.168.1.2 
iptables -A INPUT -p udp --dport 60002 -j ACCEPT
# append rule accept udp packet to port 60002
iptables -D INPUT 2 # delete input line number 2
sudo iptables-save > /etc/iptables.up.rules 
# save firewall rule to iptables.up.rules
vim /etc/network/interfaces
   auto eth0
   iface eht0 inet dhcp
   pre-up iptables-restore < /etc/iptables.up.rules # load rule from iptables.up.rules
   post-down iptables-save > /etc/iptables.up.rules # save rule before restore system
sudo nautilus # super user for files exploer
#+END_SRC
#+BEGIN_SRC bash
dmidecode -t bios #Getting SMBIOS data from sysfs
sudo dmidecode -t memory|head -45 |tail -23 # 查看内存条和内存槽
dmesg|grep -i Ethernet # 查看网卡信息
lspci |head -10 # 查看主板PCI硬件槽信息
cat /proc/cpuinfo|grep name |cut -f2 -d: | uniq -c #查看CPU信息
cat /proc/cpuinfo|grep "cores"| uniq  # 查看CPU核数
cat /proc/cpuinfo|head -20 # 查看CPU详情
lscpu # list of all cpu infomation
cat /proc/cpuinfo|grep MHz| uniq  #查看CPU主频
getconf LONG_BIT # 查看CPU运行模式
cat /proc/cpuinfo|grep flags| grep 'lm' |wc -l # 查看CPU是否支持64bit, >0表示支持64bit计算, lm表示long mode(64bit)
cat /proc/meminfo|head -20 #查看内存条详细
free -m # 查看内存使用情况
sudo fdisk -l|grep Disk # 查看挂接分区状态
lsblk # 硬盘分区分布
mount | column -t #查看挂接分区
swapon -s # 查看挂接分区状态
df -hT # 硬盘使用情况
ip link show # 所有网络接口
#+END_SRC
*** Hotkey
| keybinding | description                               |
| C-d        | exit bash                                 |
| Pstrc      | Save a screenshot to Pictures             |
| S-Pstrc    | Save a screenshot of an area to Pictures  |
| M-Pstrc    | Save a screenshot of a window to Pictures |
| C-Pstrc    | copy a screenshot to clipboard            |
| S-C-Pstrc  | copy a screeNshot of an area to clipboard |
*** Applications
**** BaiduPCS-Go [[https://github.com/iikira/BaiduPCS-Go#linux--macos][iikira]]
#+BEGIN_SRC bash
## add go path; install baidupcs-go
wget https://dl.google.com/go/go1.10.2.linux-amd64.tar.gz # download packages from github
sudo tar -c /usr/local -zxvf go1.10.2.linux-amd64.tar.gz # unzip packages
vim ~/.bashrc
export GOPATH=$HOME/go # address gp path
# export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
source ~/.bashrc # execute config file
sudo apt install golang # install golanguage
go get -u -v github.com/iikira/BaiduPCS-Go # go direct install badiupcs-go from github
sudo ln -s ~/go/bin/BaiduPCS-Go baidupcs #  create link(baidupcs) for BaiduPCS
baidupcs # run Baidupcs-Go
login # login
logout # logout
loglist # account list
who # current account
su <uid> # switch account
quota # show storage capacity
cd <dir> # enter <dir>
cd <dir> -l # enter <dir> and list subdirectory
cd .. # enter parent directory
cd / # enter root directory
pwd  # show current directory
ls -asc # show fiie ascending order
ls -desc # show file descending order
ls -time # show file according time
ls -name # show file according name
ls -size # show file according size
config set -savedir ~/Downloads # set download location
search <name> # search file about <name>
d <filename1> <filename2> # download
  --test          test download link
  --ow            overwrite
  --status        check status
  --save          save
  --saveto value  save to 
  -x              add execute permission
  --share         share links
  --locate        links download
  -p value        threads
upload <local-dir> <remote-dir> #upload
share l # share
offlinedl add <link1> <link2> # offline downloadXS
#+END_SRC
**** Goldendict 
[[http://blog.sina.com.cn/s/blog_933b54980102x6hr.html][Reference]]
**** iproute2 
[[https://www.jianshu.com/p/d129238d3853][iproute2 from jianshu]]
#+BEGIN_SRC bash
ip a # show ip 
ip link show # show ip
ip -4 a # show ipv4 informations
ip a show wlp3s0 # check specific network device
ip -details link show wlp3s0 # check specific network device
ip link ls up # show all working network device
ip route show # show route
ip -s link # show all links
ip a add 192.168.1.101/255.255.255.0 dev eth0 # set eth0 ip 192.168.1.101/255.255.255.0
ip a add 192.168.1.101/24 dev eth0 # set eth0 ip as 192.168.1.101/255.255.255.0
ip a del 192.168.1.101/24 dev eth0 # delete eth0 ip
ip -s -s a f to 192.168.1.0/24 # delete all ip
ip link set dev eth0 down # disable eth0
ip link set dev eth0 up # enable eth0
#+END_SRC
**** openssh-server ssh and mosh tutorial [[https://www.linuxidc.com/Linux/2014-06/103008.htm][1]] [[https://blog.csdn.net/u013452337/article/details/80847113][2]]
#+BEGIN_SRC bash
ps -e|grep ssh # ssh-agent and sshd
sudo /etc/init.d/ssh start # start ssh server
pidof sshd
ssh username@hosrname # root client login
ssh -p 2222 username@hosrname # port 2222 login
ssh [-l login_name] [-p port] [user@hostname] # general format
ssh -l login_name hostname # user login
ssh login_name@hostname # user login
#+END_SRC
#+NAME: transform files
#+BEGIN_SRC bash
scp /path/filename username@servername:/path/
# upload file
scp username@servername:/path/filename /var/www/local_dir
#download file
scp -r username@servername:/var/www/remote_dir(remote) /var/www/local_dir(local)
# download directory
scp -r local_dir username@servername:remote_dir
# upload directory
#+END_SRC
[[https://www.cnblogs.com/joshua317/articles/4740881.html][Talk is cheap, Show me the code]]
#+BEGIN_SRC bash
vim /etc/ssh/sshd_config
#Port 22
Port 12333
#PermitRootLogin yes
Permitrootlogin no
service sshd restart
~/.ssh/known_hosts # RSA public
/etc/ssh/ssh_known_hosts # server RSA public
ssh-keygen
cd ~/.ssh/
ssh-copy-id username@servername
vim /etc/ssh/sshd_config
->RSAAuthentication yes
->PubkeyAuthentication yes
->AuthorizedKeysFile .ssh/authorized_keys
ssh user@host 'mkdir -p .ssh && cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub
#+END_SRC
[[https://blog.csdn.net/weiwei_pig/article/details/50954334][can't used root account login ssh server -permission denied, please try again]]
#+NAME:
**** mosh
mosh connect on a udp port between 60000 and 61000
#+BEGIN_SRC bash
sudo iptables -A INPUT -p udp --dport 60002 -j ACCEPT # server
mosh -p 60002 username@servername # login
sudo apt install mosh
mosh login_name@hostname # login
#+END_SRC
**** gdb [[https://www.cnblogs.com/chenmingjun/p/8280889.html][1]]
#+BEGIN_SRC bash
gcc -o test test.c -g
g++ hello.c -o hello
#+END_SRC
**** make [[https://blog.csdn.net/qq_35451572/article/details/81092902][1]] 

**** Qt [[https://www.jianshu.com/p/a21d32c5e789][1]]
#+BEGIN_SRC 
apt install libgl1-mesa-dev
#+END_SRC
**** Vim
#+BEGIN_SRC bash
wq # write and quit
wq! # force write and quit
w <filename> # save with name
i # insert on current cursor
a # insert on next line
o # insert on a new line
set nu # show line number
<number> # turn to line #
/name # search ->n next
?name # search ->n next
q! # quit without save
set fenc=utf8 nobomb ff=unix # set file format
#+END_SRC
| command | description                     |
| C-b     | pageup                          |
| C-f     | pageon                          |
| C-d     | turn up half a page             |
| C-u     | turn on half a page             |
| 0       | begin of text                   |
| G       | end of text                     |
| $       | end of line                     |
| ^       | begin of line                   |
| w       | next begin of word              |
| e       | next end of word                |
| b       | backward word                   |
| #l      | turn to char #                  |
| x       | delete                          |
| #x      | delete # chars                  |
| X       | backspace                       |
| #X      | backspace # chars               |
| dd      | delete current line             |
| #dd     | delete # line                   |
| yw      | copy to buffer                  |
| #yw     | copy # words to buffer          |
| yy      | copy line to buffer             |
| #yy     | copy # lines to buffer          |
| p       | paste                           |
| r       | replace                         |
| R       | replace continuously            |
| u       | undone                          |
| cw      | delete word                     |
| c#w     | delete # words                  |
| #G      | turn to line #                  |
| C-g     | current line number             |
| #       | search word like current cursor |
**** RIME [[https://www.cnblogs.com/BlackStorm/p/Install-IBUS-RIME-Input-Method-On-Ubuntu-16-04-LTS.html][1]] [[http://zhizhi.betahouse.us/2018/10/17/rime-setup/][2]] [[https://www.jianshu.com/p/cffc0ea094a7][3]] 
#+BEGIN_SRC bash
sudo apt install ibus-rime
sudo apt install librime-data-pinyin-simp
sudo apt-get install librime-data-double-pinyin
cd ~/.config/ibus/rime
vim default.custom.yaml
"menu/page_size": 7
gsettings set org.freedesktop.ibus.panel lookup-table-orientation 0 # horizontal 
#+END_SRC
[[https://www.findhao.net/res/1746][rime add customized thesaurus]]
[[https://www.jianshu.com/p/58ea12e8886d][1]]
[[https://www.jianshu.com/p/cffc0ea094a7][2]]
**** Arm [[https://blog.csdn.net/qq_33475105/article/details/81489792][1]]
**** minicom [[https://blog.csdn.net/qq_38880380/article/details/77662637][1]]
#+BEGIN_SRC bash
sudo apt install minicom
sudo minicom -s # setup
sudo minicom # running
#+END_SRC
**** SAPGUI [[https://blogs.sap.com/2015/07/04/sap-gui-for-java-installation-and-configuration/][1]] [[https://www.icloud.com/#iclouddrive/0Kwlf84ytOdz5PLbfxg8eWZZQ][JAVA 750]] [[https://wenku.baidu.com/view/1e730049360cba1aa811da9a.html][3]]
[[https://wi-labor.informatik.hs-fulda.de/download/SAP%2520GUI/7.40/Java%2520740-10/][SAP DUI 7.40 Java]]
[[https://wi-labor.informatik.hs-fulda.de/][wi-labor]]
[[https://blog.csdn.net/budaha/article/details/51479414][SAP GUI JAVA Configration]]
#+BEGIN_SRC bash
cd /opt/SAPClients/SAPGUI/bin/
./guistart conn=/H/ip-address/S/3200 # login
cd /opt/SAPClients/SAPGUI7.40rev10/bin 
./guilogon # logon
#+END_SRC
conn=/H/192.168.3.51/S3200
**** EdrawMax [[https://www.edrawsoft.com/download-edrawmax-linux.php][1]]
#+BEGIN_SRC bash
tar -zxvf edrawmax-9-amd64.tar.gz
chmod +x EdrawMax
sudo ./EdrawMax
cd /usr/local/bin
sudo ln -s ~/Downloads/edrawmax-9-amd64/EdrawMax edrawmax
#+END_SRC
**** Emacs [[https://www.cnblogs.com/qlwy/archive/2012/06/15/2551034.html][1]]
| keybindings | description                     |
| C-c C-x C-v | show figure                     |
| C-x C-c     | exit                            |
| C-x C-w     | save as                         |
| C-x C-v     | exit buffer and open new buffer |
| C-x i       | insert file                     |
| C-x b       | switch buffer                   |
| C-x C-b     | buffer list                     |
| C-c C-z     | stop shell process              |
| C-x 2       | left and right windows          |
| C-x 3       | up and down windows             |
| C-x 0       | exit current window             |
| C-x o       | switch windows                  |
| C-x 1       | exit others windows             |
| C-x 5 2     | new window                      |
| C-x 5 f     | new window and open file        |
| C-a         | begin of current line           |
| C-e         | end of current line             |
| C-v         | pageup                          |
| M-v         | pageon                          |
| M-<         | begin of text                   |
| M->         | end of text                     |
| M-c         | capitalize-word                 |
| M-u         | upcase-word                     |
| M-l         | downcase-word                   |
| M-- M-c     | capitalize-forward-word         |
| M-- M-u     | upcase-forward-word             |
| M-- M-l     | downcase-forward-word           |
| C-x C-u     | downcase-region                 |
| C-x C-l     | upcase-region                   |
#+CAPTION: Pictures link
#+ATTR.*: :width 100
#+ATTR_foo: :width 600px
#+ATTR_ORG: :width 300px
#+AttR_LATEX: :width 200
#+ATTR_HTML: :width 350 or #+ATTR_HTML: :width 100%
#+BEGIN_SRC elisp
(setq org-image-actual-width nil)
(setq org-image-actual-width '(400))
#+END_SRC
M-x replace-string 
***** org mode  
| C-c .   | select date to add timestamp |
| C-C C-s | add schedule date            |
| C-c C-d | add Deadline date            |
**** samba 
[[https://blog.csdn.net/qq_16551373/article/details/78171475][share files between windows and ubuntu]]
[[https://www.cnblogs.com/snoopys/p/6118488.html][simple tutorial]]
#+BEGIN_SRC bash
sudo apt install samba samba-common
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak # backup current config file
vim /etc/samba/smb.conf # configuration file
    security = user # account login

    security = user 
    map to guest = bad user # guest login
[share]
   comment = my share directory
   path = /home/madhouse/share # add share files
   available =yes
   browseable = yes # directory browseable premission
   writable = yes
   guest ok = yes
   public = yes
sudo useradd smbuser
sudo smbpasswd -a smbuser
sudo service smbd restart # restart samba service
sudo /etc/init.d/smbd restart # restart samba service
service smbd status # check status
service iptables stop # turn off SElinux
vim /etc/selinux/config
   SELINUX=enforcing-->set SELINUX=disabled # turn off forever
setenforce 0 # turn off 
#+END_SRC
windows browser login: file://10.0.12.172/share
smbclient login: smbclient //10.0.12.172/share/
                 smbclient -L //10.0.12.172
connect to server: smb://10.0.12.172/share/
windows explorer: \\10.0.12.172
win-r: \\10.0.12.172
**** MPD[Music Player Daemon]
[[http://blog.topspeedsnail.com/archives/7504][ubuntu install and configure MPD]]
#+BEGIN_SRC bash
sudo apt install mpd 
sudo systemctl start mpd
#+END_SRC
**** pandoc
[[https://www.jianshu.com/p/6ba04f669d0b][install and configure pandoc]]
**** Matlab
[[https://www.cnblogs.com/Amedeo/archive/2018/06/03/9129925.html#_label0][install matlab2016b on ubuntu18]]
[[https://blog.csdn.net/minione_2016/article/details/53313271][ubuntu16.04 install matlab2016b]]
#+BEGIN_SRC bash
cd ~
sudo mkdir matlab
sudo mount -t auto -o loop Linux/R2016b_glnxa64_dvd1.iso matlab/
# sudo mount -o loop Linux/R2016b_glnxa64_dvd1.iso matlab/
sudo matlab/install 
sudo mount -t auto -o loop Linux/R2016b_glnxa64_dvd2.iso matlab/ 
sudo umount matlab/
sudo cp Matlab_R2016b_Linux64_Crack/R2016b/bin/glnxa64/* /usr/local/MATLAB/R2016b/bin/glnxa64
sudo /usr/local/MATLAB/R2016b/bin/matlab
sudo vim /usr/share/applications/Matlab2016b.desktop
[Desktop Entry]
Categories=Development;Matlab;
Comment[zh_CN]=Matlab: The Language of Technical Computing
Comment=Matlab: The Language of Technical Computing
Exec=sh /usr/local/MATLAB/R2016b/bin/matlab -desktop
GenericName[zh_CN]=Matlab2016b
GenericName=Matlab2016b
Icon=/usr/local/MATLAB/R2016b/toolbox/sl3d/mainpage/matlab_logo.gif
Mimetype=
Name[zh_CN]=MATLAB
Name=MATLAB
Path=
StartupNotify=true
Terminal=false
Type=Application
sudo chmod 777 ~/.matlab -R 
sudo vim ~/.zshrc
export PATH=/usr/local/MATLAB/R2016b/bin:$PATH
source ~/.zshrc
#+END_SRC
**** R
#+BEGIN_SRC bash
sudo apt install r-base
R
#+END_SRC
**** redshift
#+BEGIN_SRC bash
sudo apt install redshift
#+END_SRC
**** 7zip 
#+BEGIN_SRC bash
sudo apt install p7zip
p7zip -d filename
#+END_SRC
**** w3m
[[https://www.cnblogs.com/l137/p/3405967.html][emacs w3m]]
[[https://www.linuxidc.com/Linux/2014-02/97078.htm][w3m]]
**** wine
#+BEGIN_SRC bash
wine: cannot find L"C:\\windows\\system32\\udpInterfaceTest_V1.0.2.9.exe"
# solution
wine control.exe 
add/remove programs # select program install
#+END_SRC
**** vscode+latexworkshop [[https://zhuanlan.zhihu.com/p/90526218][{1}]]
latex-workshop.latex.recipes Edit in settings.json
| Command | Description              |
| C-S-x   | Extensions               |
| C-,     | Setting                  |
| C-k C-s | Keyboard Shortcuts       |
| C-M-x   | Total Commands           |
| C-M-c   | clean up auxiliary flies |
| C-M-v   | preview pdf              |
| C-M-j   | forward search           |
*** wireshark
根据端口过滤
ip.src==192.168.0.2 and ip.dst==192.168.0.233 and tcp.port==965
根据包长过滤
ip.src==192.168.0.2 and ip.dst==192.168.0.233 and tcp.len==12
*** Linux Customize
**** turn CapsLock to Left Ctrl [[https://www.cnblogs.com/ethan87/p/10219093.html][1]]
#+BEGIN_SRC bash
sudo vim /usr/share/X11/xkb/keycodes/evdev
CAPS=37;
LCTL=66;
#+END_SRC
**** ubuntu HDMI monitor [[https://blog.csdn.net/tianmaxingkong_/article/details/50570538][1]] [[https://forum.ubuntu.org.cn/viewtopic.php?t=486885][2]]
#+BEGIN_SRC bash
xrandr # check connecting device
xrandr --output HDMI-0 --same-as eDP-1 --auto # clone
xrandr --output VGA-0 --same-as LVDS --mode 1280x1024 # set display resolution
xrandr --output VGA-0 --right-of LVDS --auto # right display
xrandr --output VGA-0 --off # turn off monitor
xrandr --output VGA-0 --auto --output LVDS --off # turn on VGA, turn off LVDS
#+END_SRC
**** Internal network penetration
[[https://blog.csdn.net/weixin_36562804/article/details/81737521][VPS + ssh reverse proxy + autossh 1]] [[https://blog.csdn.net/asahinokawa/article/details/85480803][2]] [[https://blog.csdn.net/dy200811/article/details/52847543][3]] [[http://arondight.me/2016/02/17/%25E4%25BD%25BF%25E7%2594%25A8SSH%25E5%258F%258D%25E5%2590%2591%25E9%259A%25A7%25E9%2581%2593%25E8%25BF%259B%25E8%25A1%258C%25E5%2586%2585%25E7%25BD%2591%25E7%25A9%25BF%25E9%2580%258F/][4]]
#+BEGIN_SRC bash
ssh -fCNR # Reverse proxy ssh
# f-> background execute, C-> allow compress date, N-> don't execute remote control, R-> reverse
ssh -fCNL # proxy ssh
ps aux| grep ssh # check all ssh connect
vim /etc/rc.d/rc.loacl
#+END_SRC
[[https://blog.csdn.net/sethqqq/article/details/77033154][Ngrok + ssh connect server 1]] [[https://blog.csdn.net/qq_33404395/article/details/80788233][2]] [[https://www.sunnyos.com/article-show-67.html][3]]
#+BEGIN_SRC bash
ssh -p port username@free.idcfengye.com # tcp login
killall sunny 
sleep 1
./sunny clientid id # restart sunny, free memory
#+END_SRC
**** clean
#+BEGIN_SRC bash
sudo du -sh /var/cache/apt # check packages size
sudo apt autoclean # clean old packages
sudo apt clean # clean all packages
sudo du -sh ~/.cache/thumbnails # check cache pictures
rm -rf ~/.cache/thumbnails/* # remove cache pictures
#+END_SRC
**** desktop shortcut
#+BEGIN_SRC bash
[Desktop Entry]
Encoding=UTF-8
Version=1.0                                     #version of an app.
Name[en_US]=yEd                                 #name of an app.
GenericName=GUI Port Scanner                    #longer name of an app.
Exec=java -jar /opt/yed-3.11.1/yed.jar          #command used to launch an app.
Terminal=false                                  #whether an app requires to be run in a terminal
Icon[en_US]=/opt/yed-3.11.1/icons/yicon32.png   #location of icon file.
Type=Application                                #type
Categories=Application;Network;Security;        #categories in which this app should be listed.
Comment[en_US]=yEd Graph Editor                 #comment which appears as a tooltip.
#+END_SRC
****  
[[https://blog.csdn.net/u012491646/article/details/80219973][ubuntu 18 share hotspot]]
**** Github+Hexo
#+BEGIN_SRC bash
echo "export PATH=$PATH:/home/madhouse/Downloads/node-v10.15.3-linux-x64/nin" >> ~/.zshrc
echo PATH
#+END_SRC
#+BEGIN_SRC bash
hexo g # generate public files
hexo clean # clean public files
hexo d # deploy public files
hexo clean && hexo d # refresh public files and deploy
#+END_SRC
[[https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html][personal free blog]]
[[https://blog.csdn.net/sinat_37781304/article/details/82729029][build hexo blog detail tuorial]]
SEO(Search Engine Optimization)
[[https://www.google.com/webmasters/tools/home?hl=zh-CN&pli=1][Google Search Console]]
[[https://wuyongshi.top/free-domain][Free Domain]]
[[https://fedoryx.github.io/Hexo-%25E5%258D%259A%25E5%25AE%25A2%25E6%2590%259C%25E7%25B4%25A2-SEO-%25E4%25BC%2598%25E5%258C%2596-%25E8%25B0%25B7%25E6%25AD%258C%25E7%25AF%2587/][hexo SEO optimization for google]]
[[https://www.cnblogs.com/php-linux/p/8493346.html][hexo Next themes website verification]]
[[https://blog.csdn.net/qq_32454537/article/details/79482896][Hexo install and configure Next themes]]
#+BEGIN_SRC yaml
permalink: :year/:month/:day/:title/
permalink: :title.html
#+END_SRC
**** rime language input 
[[http://zhizhi.betahouse.us/2018/10/17/rime-setup/][Rime squirrel configuration log]] 
[[https://www.jianshu.com/p/cffc0ea094a7][Rime input add thesaurus and configuration file]]
[[https://www.jianshu.com/p/58ea12e8886d][Note for linux install rime input]]
[[https://github.com/rime/home/wiki/CustomizationGuide][github rime wiki customization guide]]
#+BEGIN_SRC bash
sudo apt install ibus-rime
sudo apt install librime-data-pinyin-simp
sudo apt-get install librime-data-double-pinyin
cd ~/.config/ibus/rime
vim default.custom.yaml
"menu/page_size": 7
gsettings set org.freedesktop.ibus.panel lookup-table-orientation 0 # Candidates are displayed horizontally
sync rime dictionary
vim ~/.config/ibus/rime/symbols.yaml
installation_id: "9c755581-73c8-4fdb-b18a-a819005dc543"
killall ibus-daemon 
/usr/bin/rime_dict_manager -s
#+END_SRC
**** automatic mount hard disk 
[[https://www.cnblogs.com/fieldtianye/p/9295986.html][Ubuntu automatic mount hard disk]]
#+BEGIN_SRC bash
sudo fdisk -l # list all disk found
mkfs -t ext4 dev/sdb6 # format sdb6 to ext4
ls -l /dev/disk/by-uuid # view disk id
df -l # list all disk mounted 
df -h # list capacity of disk
sudo gedit /etc/fstab # edit fstab
sudo mount -a # mount disk according to configration file
#+END_SRC
**** pomodoro
#+BEGIN_SRC bash
sleep 300 && notify-send "Back to work"
sleep 1500 && zenity --warning --text="Your pomodoro session just needed, Have a well deserved 5 minutes break"; 
sleep 300 && zenity --warning --text="Back to work"
#+END_SRC
*** Latex
**** language
[[https://www.sharelatex.com/][ShareLatex]] [[https://www.overleaf.com/][Overleaf]]
#+BEGIN_SRC latex
\documentclass[12pt][article]
% 12pt font size, article english, cn-article, ctexart chinese
\usepackage[utf8]{inputenc}
\author{madhouse}
\title{My first latex document}
\date{April 2019}
\begin{document}
   \maketile % print title
   ...
   % new line
   \\ ... % new line
   \par ... % new line
   \iffalse commit \fi
\begin{center}
   \includegraphics[scale=0.1]{1.jpg}
   \includegraphics[width=3cm]{2.png}
   \includegraphics[height=8cm]{3.jpeg}
\end{center}
\begin{figure}[ht] % figure environment, h->plug here, t->top of page
% b->bottom, p-> page, independent page
\centering % pictures on the center
\includegraphics{4.png}
\caption{this is a figure demo}
\label{fig:label}
\end{figure}
\begin{figure*}
...
\end{figure*} % 跨双栏插入图片
\end{document}
#+END_SRC
[[https://blog.csdn.net/junyidcf/article/details/48914047][Org mode export TEX and PDF]]
#+LATEX_HEADER: \usepackage{ctex}
#+LATEX_HEADER: \usepackage{graphicx}
**** Latex [[https://blog.csdn.net/csfreebird/article/details/43636615][4]] [[http://www.bagualu.net/wordpress/archives/6525][5]] [[https://blog.csdn.net/csfreebird/article/details/43636615][6]] [[https://blog.csdn.net/u014803202/article/details/50410748][7]] [[https://blog.csdn.net/wuyao721/article/details/7669993][8]] [[http://blog.sina.com.cn/s/blog_61f013b801010cdh.html][9]] [[https://www.cnblogs.com/yeluqing/archive/2012/09/24/3827966.html][10]] [[https://www.cnblogs.com/SunSmileCS/archive/2013/02/22/2923002.html][11]] [[https://blog.csdn.net/pfanaya/article/details/7669364][12]] [[https://emacs-china.org/t/topic/2540][13]] [[http://blog.sina.com.cn/s/blog_61f013b801010cdh.html][14]] [[https://www.xuebuyuan.com/865488.html][15]] [[https://max.book118.com/html/2018/0103/147043242.shtm][16]] [[https://blog.csdn.net/junyidcf/article/details/48914047][17]]
#+BEGIN_SRC bash
sudo apt install texlive-full
sudo apt install auctex
#+END_SRC
#+BEGIN_SRC elisp
(add-hook 'LaTeX-mode-hook (lambda()
(add-to-list 'TeX-command-list '("XeLaTeX" "%`xelatex%(mode)%' %t" TeX-run-TeX nil t))
(setq TeX-command-default "XeLaTeX")
(setq TeX-save-query  nil )
(setq TeX-show-compilation t)
))
#+END_SRC
#+BEGIN_SRC elisp
(setq org-latex-compiler "xelatex")
#+END_SRC
#+LATEX_HEADER: \usepackage{ctex}
#+LATEX_COMPILER: xelatex
#+BEGIN_SRC tex
/usepackage[unicode=true,colorlinks=no,pdfborder=no]{hyperref}
#+END_SRC
[[https://emacs-china.org/t/org-mode-latex-org/8044/2][23]]
*** VPS
**** AWS EC2
#+BEGIN_SRC bash
sudo shmod 400 identity.pem 
ssh -i identity.pem ubuntu@vps_ip # ssh connect
sudo passwd root # set root password
su  # root
vim /etc/ssh/ssh_config
PasswordAuthentication no -> yes
sudo service sshd restart
su 
passwd ubuntu # reset password
#+END_SRC
*** Openocd+tcl
#+BEGIN_SRC bash
openocd -f ~/cpp/openocd-0.10.0/tcl/interface/jlink.cfg -f tm4c129.cfg ##connect
telnet localhost 4444 # telnet' connection on tcp/4444
halt # stop cpu
mdw 0 12 #从0地址读12个数（32位）
mww 0 0x00000201 #向某地址写数（32位
reg #查看寄存器
shoudown # disconnect
#+END_SRC
